{
	"id": "f72d0702-c5c1-4083-8f35-c6506a5e2afa",
	"name": "CS493 Final Tests Renters",
	"allTests": [],
	"timestamp": "2018-12-04T01:24:41.821Z",
	"collection_id": "4d5463d6-c363-4377-9481-1909631be12e",
	"folder_id": 0,
	"target_type": "collection",
	"environment_id": "b1dd615f-da42-414b-9b66-454a30f7c4ae",
	"data": [],
	"delay": 0,
	"count": 1,
	"collection": {
		"id": "4d5463d6-c363-4377-9481-1909631be12e",
		"name": "CS493 Final Tests Renters",
		"description": "",
		"auth": null,
		"events": null,
		"variables": [],
		"order": [
			"4b8cab7e-9159-4ca2-9c9c-443c8a1e41f2",
			"70c5dc8b-fa4d-4282-be57-9d026d15e94a",
			"167749c8-4785-4ec1-82e0-eb9198f1704c",
			"80d8d4e2-4398-4b3a-951c-53da8c636611",
			"7c5c517f-b53b-41d6-a644-925a6babbbdf",
			"382a615c-7ade-4d41-ab0e-36eac3912908",
			"c35dfa3e-ea5d-4031-80e5-8133c6ef8a4c",
			"0747eea4-22cd-48c7-8603-8abaf1ee4536",
			"f0fc259b-c86d-4a79-9981-6bef06a5ab15",
			"ef36783b-cdfc-47d9-8c71-d4b98a2c8574",
			"10aafc1a-b377-4120-9ce9-85319cfa497c",
			"004838cd-111c-41b5-a08d-68dbc4884448",
			"594388a9-a998-4685-923e-53ff83303d93",
			"0693706f-3b07-43d9-980d-0a679871229e",
			"7f41b6c7-8d0a-44f8-9f85-7e1b776ee8e0",
			"c467fc46-88ad-45e1-b19a-2097d22521ee",
			"9f5e4b9a-aaa0-49fa-93fe-1b04a14dd08a",
			"f56ee21b-33e7-4c03-8f9e-200b54f3b458",
			"341aacaa-84a5-4f73-955c-761cef0ca57a",
			"74dd8d68-d02b-4bfb-b8df-e816bcf1703a",
			"5c849342-34bd-43d8-9db8-ec57903db354",
			"d165b584-19a0-4e71-b381-f73ef986a77c",
			"9ef792c7-a36f-435f-8662-40b657a50794",
			"5894a2f7-d418-4025-9d4d-acdc8caa49ab",
			"bad40055-bac1-4ef8-bfde-498c169cf852"
		],
		"folders_order": [],
		"owner": "5449793",
		"permissions": {},
		"favorite": false,
		"shared": false,
		"type": "collection",
		"depth": 0
	},
	"folder": null,
	"environment": null,
	"globals": [
		{
			"value": "0",
			"key": "new_folder_id",
			"enabled": true
		}
	],
	"results": [
		{
			"name": "405 error delete /renters",
			"id": "4b8cab7e-9159-4ca2-9c9c-443c8a1e41f2",
			"url": "https://cs493-final.appspot.com/renters",
			"totalTime": 0,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed",
				"detail": {
					"name": "Method Not Allowed",
					"detail": "A request was made of a resource using a request method not supported by that resource; for example, using GET on a form which requires data to be presented via POST, or using PUT on a read-only resource."
				}
			},
			"tests": {
				"name": "Status code is 405",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status code is 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"192"
			],
			"allTests": [
				{
					"Status code is 405": true
				}
			],
			"time": "192",
			"totalRequestTime": "192",
			"iterationResults": {}
		},
		{
			"name": "405 error  put /renters",
			"id": "70c5dc8b-fa4d-4282-be57-9d026d15e94a",
			"url": "https://cs493-final.appspot.com/renters",
			"totalTime": 0,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed",
				"detail": {
					"name": "Method Not Allowed",
					"detail": "A request was made of a resource using a request method not supported by that resource; for example, using GET on a form which requires data to be presented via POST, or using PUT on a read-only resource."
				}
			},
			"tests": {
				"name": "Status code is 405",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status code is 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"189"
			],
			"allTests": [
				{
					"Status code is 405": true
				}
			],
			"time": "189",
			"totalRequestTime": "189",
			"iterationResults": {}
		},
		{
			"name": "GET all Renters",
			"id": "167749c8-4785-4ec1-82e0-eb9198f1704c",
			"url": "https://cs493-final.appspot.com/renters",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Total number of renters = 5",
				"status": "pass",
				"Pagination doesn't exist": true
			},
			"testPassFailCounts": {
				"Total number of renters = 5": {
					"pass": 1,
					"fail": 0
				},
				"Pagination doesn't exist": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"471"
			],
			"allTests": [
				{
					"Total number of renters = 5": true,
					"Pagination doesn't exist": true
				}
			],
			"time": "471",
			"totalRequestTime": "471",
			"iterationResults": {}
		},
		{
			"name": "GET all Renters Accepts not application/json",
			"id": "80d8d4e2-4398-4b3a-951c-53da8c636611",
			"url": "https://cs493-final.appspot.com/renters",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status code is 406",
				"status": "pass",
				"Body matches Not Acceptable": true
			},
			"testPassFailCounts": {
				"Status code is 406": {
					"pass": 1,
					"fail": 0
				},
				"Body matches Not Acceptable": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"481"
			],
			"allTests": [
				{
					"Status code is 406": true,
					"Body matches Not Acceptable": true
				}
			],
			"time": "481",
			"totalRequestTime": "481",
			"iterationResults": {}
		},
		{
			"name": "POST New Renter Peter Griffin",
			"id": "7c5c517f-b53b-41d6-a644-925a6babbbdf",
			"url": "https://cs493-final.appspot.com/renters",
			"totalTime": 0,
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"tests": {
				"name": "Status code is 201",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status code is 201": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"843"
			],
			"allTests": [
				{
					"Status code is 201": true
				}
			],
			"time": "843",
			"totalRequestTime": "843",
			"iterationResults": {}
		},
		{
			"name": "POST New Renter Bart Simpson",
			"id": "382a615c-7ade-4d41-ab0e-36eac3912908",
			"url": "https://cs493-final.appspot.com/renters",
			"totalTime": 0,
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"tests": {
				"name": "Status code is 201",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status code is 201": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"957"
			],
			"allTests": [
				{
					"Status code is 201": true
				}
			],
			"time": "957",
			"totalRequestTime": "957",
			"iterationResults": {}
		},
		{
			"name": "Login-access token Peter",
			"id": "c35dfa3e-ea5d-4031-80e5-8133c6ef8a4c",
			"url": "https://cs493-final.appspot.com/login",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status code is 200",
				"status": "pass",
				"Body matches string": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Body matches string": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"495"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Body matches string": true
				}
			],
			"time": "495",
			"totalRequestTime": "495",
			"iterationResults": {}
		},
		{
			"name": "Peter Self link",
			"id": "0747eea4-22cd-48c7-8603-8abaf1ee4536",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status code is 200",
				"status": "pass",
				"Body has self": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Body has self": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"279"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Body has self": true
				}
			],
			"time": "279",
			"totalRequestTime": "279",
			"iterationResults": {}
		},
		{
			"name": "Peter Self link Accepts not application/json",
			"id": "f0fc259b-c86d-4a79-9981-6bef06a5ab15",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status code is 406",
				"status": "pass",
				"Body matches Not Acceptable": true
			},
			"testPassFailCounts": {
				"Status code is 406": {
					"pass": 1,
					"fail": 0
				},
				"Body matches Not Acceptable": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"387"
			],
			"allTests": [
				{
					"Status code is 406": true,
					"Body matches Not Acceptable": true
				}
			],
			"time": "387",
			"totalRequestTime": "387",
			"iterationResults": {}
		},
		{
			"name": "Peter Self link application/xml",
			"id": "ef36783b-cdfc-47d9-8c71-d4b98a2c8574",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status code is 200",
				"status": "pass",
				"Body has self": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Body has self": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"216"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Body has self": true
				}
			],
			"time": "216",
			"totalRequestTime": "216",
			"iterationResults": {}
		},
		{
			"name": "Login-access token Bart",
			"id": "10aafc1a-b377-4120-9ce9-85319cfa497c",
			"url": "https://cs493-final.appspot.com/login",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status code is 200",
				"status": "pass",
				"Body matches string": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Body matches string": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"565"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Body matches string": true
				}
			],
			"time": "565",
			"totalRequestTime": "565",
			"iterationResults": {}
		},
		{
			"name": "Bart Self link",
			"id": "004838cd-111c-41b5-a08d-68dbc4884448",
			"url": "http://cs493-final.appspot.com/renters/5638350320959488",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status code is 200",
				"status": "pass",
				"Body has self": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Body has self": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"204"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Body has self": true
				}
			],
			"time": "204",
			"totalRequestTime": "204",
			"iterationResults": {}
		},
		{
			"name": "Peter Self link Bart login-UnAuthorized",
			"id": "594388a9-a998-4685-923e-53ff83303d93",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status code is 401",
				"status": "pass",
				"Body matches string Unauthorized": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				},
				"Body matches string Unauthorized": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"357"
			],
			"allTests": [
				{
					"Status code is 401": true,
					"Body matches string Unauthorized": true
				}
			],
			"time": "357",
			"totalRequestTime": "357",
			"iterationResults": {}
		},
		{
			"name": "GET all Renters  pagination link",
			"id": "0693706f-3b07-43d9-980d-0a679871229e",
			"url": "https://cs493-final.appspot.com/renters",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Has First Name",
				"status": "pass",
				"Has First Name": true,
				"Status code is 200": true,
				"Has Pagination": true
			},
			"testPassFailCounts": {
				"Has First Name": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Has Pagination": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"287"
			],
			"allTests": [
				{
					"Has First Name": true,
					"Status code is 200": true,
					"Has Pagination": true
				}
			],
			"time": "287",
			"totalRequestTime": "287",
			"iterationResults": {}
		},
		{
			"name": "GET all Renters  pagination next link",
			"id": "7f41b6c7-8d0a-44f8-9f85-7e1b776ee8e0",
			"url": "http://cs493-final.appspot.com/renters?cursor=CioSJGoNc35jczQ5My1maW5hbHITCxIGUmVudGVyGICAgKCFrpYKDBgAIAA=",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status code is 200",
				"status": "pass",
				"Has expected renter on page": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Has expected renter on page": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"487"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Has expected renter on page": true
				}
			],
			"time": "487",
			"totalRequestTime": "487",
			"iterationResults": {}
		},
		{
			"name": "PUT Peter Renter-authorized",
			"id": "c467fc46-88ad-45e1-b19a-2097d22521ee",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"totalTime": 0,
			"responseCode": {
				"code": 303,
				"name": "See Other",
				"detail": {
					"name": "See Other",
					"detail": "The response to the request can be found under another URI using a GET method. When received in response to a POST (or PUT/DELETE), it should be assumed that the server has received the data and the redirect should be issued with a separate GET message."
				}
			},
			"tests": {
				"name": "Content-Type is present",
				"status": "pass",
				"Status code is 303": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 303": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"387"
			],
			"allTests": [
				{
					"Content-Type is present": true,
					"Status code is 303": true
				}
			],
			"time": "387",
			"totalRequestTime": "387",
			"iterationResults": {}
		},
		{
			"name": "Peter Renter-Check modified values",
			"id": "9f5e4b9a-aaa0-49fa-93fe-1b04a14dd08a",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status code is 200",
				"status": "pass",
				"Body matches Last": true,
				"Body matches First": true,
				"Body matches phone": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Body matches Last": {
					"pass": 1,
					"fail": 0
				},
				"Body matches First": {
					"pass": 1,
					"fail": 0
				},
				"Body matches phone": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"239"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Body matches Last": true,
					"Body matches First": true,
					"Body matches phone": true
				}
			],
			"time": "239",
			"totalRequestTime": "239",
			"iterationResults": {}
		},
		{
			"name": "PUT Peter Renter-unauthorized",
			"id": "f56ee21b-33e7-4c03-8f9e-200b54f3b458",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status code is 401",
				"status": "pass",
				"Body matches Unauthorized": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				},
				"Body matches Unauthorized": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"433"
			],
			"allTests": [
				{
					"Status code is 401": true,
					"Body matches Unauthorized": true
				}
			],
			"time": "433",
			"totalRequestTime": "433",
			"iterationResults": {}
		},
		{
			"name": "Peter Renter-Check modified values haven't changed",
			"id": "341aacaa-84a5-4f73-955c-761cef0ca57a",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status code is 200",
				"status": "pass",
				"Body matches Last": true,
				"Body matches First": true,
				"Body matches phone": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Body matches Last": {
					"pass": 1,
					"fail": 0
				},
				"Body matches First": {
					"pass": 1,
					"fail": 0
				},
				"Body matches phone": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"126"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Body matches Last": true,
					"Body matches First": true,
					"Body matches phone": true
				}
			],
			"time": "126",
			"totalRequestTime": "126",
			"iterationResults": {}
		},
		{
			"name": "delete Peter Griffin Renter UnAuthorized",
			"id": "74dd8d68-d02b-4bfb-b8df-e816bcf1703a",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status code is 401",
				"status": "pass",
				"Body has unauthorized": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				},
				"Body has unauthorized": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"510"
			],
			"allTests": [
				{
					"Status code is 401": true,
					"Body has unauthorized": true
				}
			],
			"time": "510",
			"totalRequestTime": "510",
			"iterationResults": {}
		},
		{
			"name": "delete Peter Griffin Renter Authorized",
			"id": "5c849342-34bd-43d8-9db8-ec57903db354",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"totalTime": 0,
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"tests": {
				"name": "Status code is 204",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status code is 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"731"
			],
			"allTests": [
				{
					"Status code is 204": true
				}
			],
			"time": "731",
			"totalRequestTime": "731",
			"iterationResults": {}
		},
		{
			"name": "GET Renters check number decrease",
			"id": "d165b584-19a0-4e71-b381-f73ef986a77c",
			"url": "https://cs493-final.appspot.com/renters",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Does not have Peter",
				"status": "pass",
				"Status code is 200": true,
				"Total Decreased by 1": true
			},
			"testPassFailCounts": {
				"Does not have Peter": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Total Decreased by 1": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"496"
			],
			"allTests": [
				{
					"Does not have Peter": true,
					"Status code is 200": true,
					"Total Decreased by 1": true
				}
			],
			"time": "496",
			"totalRequestTime": "496",
			"iterationResults": {}
		},
		{
			"name": "delete Bart Simpson Renter UnAuthorized",
			"id": "9ef792c7-a36f-435f-8662-40b657a50794",
			"url": "http://cs493-final.appspot.com/renters/5638350320959488",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status code is 401",
				"status": "pass",
				"Body matches Unauthorized": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				},
				"Body matches Unauthorized": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"586"
			],
			"allTests": [
				{
					"Status code is 401": true,
					"Body matches Unauthorized": true
				}
			],
			"time": "586",
			"totalRequestTime": "586",
			"iterationResults": {}
		},
		{
			"name": "delete Bart Simpson Renter Authorized",
			"id": "5894a2f7-d418-4025-9d4d-acdc8caa49ab",
			"url": "http://cs493-final.appspot.com/renters/5638350320959488",
			"totalTime": 0,
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"tests": {
				"name": "Status code is 204",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status code is 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"799"
			],
			"allTests": [
				{
					"Status code is 204": true
				}
			],
			"time": "799",
			"totalRequestTime": "799",
			"iterationResults": {}
		},
		{
			"name": "GET Renters check number decrease",
			"id": "bad40055-bac1-4ef8-bfde-498c169cf852",
			"url": "https://cs493-final.appspot.com/renters",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Doesn't Have Bart",
				"status": "pass",
				"Status code is 200": true,
				"Total Decreased by 1": true
			},
			"testPassFailCounts": {
				"Doesn't Have Bart": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Total Decreased by 1": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"496"
			],
			"allTests": [
				{
					"Doesn't Have Bart": true,
					"Status code is 200": true,
					"Total Decreased by 1": true
				}
			],
			"time": "496",
			"totalRequestTime": "496",
			"iterationResults": {}
		}
	],
	"totalPass": 52,
	"totalFail": 0,
	"totalTime": 11213,
	"lifecycle": "done",
	"requests": [
		{
			"name": "405 error delete /renters",
			"id": "4b8cab7e-9159-4ca2-9c9c-443c8a1e41f2",
			"url": "https://cs493-final.appspot.com/renters",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed",
				"detail": {
					"name": "Method Not Allowed",
					"detail": "A request was made of a resource using a request method not supported by that resource; for example, using GET on a form which requires data to be presented via POST, or using PUT on a read-only resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 405": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "405 error  put /renters",
			"id": "70c5dc8b-fa4d-4282-be57-9d026d15e94a",
			"url": "https://cs493-final.appspot.com/renters",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed",
				"detail": {
					"name": "Method Not Allowed",
					"detail": "A request was made of a resource using a request method not supported by that resource; for example, using GET on a form which requires data to be presented via POST, or using PUT on a read-only resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 405": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "GET all Renters",
			"id": "167749c8-4785-4ec1-82e0-eb9198f1704c",
			"url": "https://cs493-final.appspot.com/renters",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Total number of renters = 5": {
					"pass": 1,
					"fail": 0
				},
				"Pagination doesn't exist": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "GET all Renters Accepts not application/json",
			"id": "80d8d4e2-4398-4b3a-951c-53da8c636611",
			"url": "https://cs493-final.appspot.com/renters",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status code is 406": {
					"pass": 1,
					"fail": 0
				},
				"Body matches Not Acceptable": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "POST New Renter Peter Griffin",
			"id": "7c5c517f-b53b-41d6-a644-925a6babbbdf",
			"url": "https://cs493-final.appspot.com/renters",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"testPassFailCounts": {
				"Status code is 201": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "POST New Renter Bart Simpson",
			"id": "382a615c-7ade-4d41-ab0e-36eac3912908",
			"url": "https://cs493-final.appspot.com/renters",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"testPassFailCounts": {
				"Status code is 201": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Login-access token Peter",
			"id": "c35dfa3e-ea5d-4031-80e5-8133c6ef8a4c",
			"url": "https://cs493-final.appspot.com/login",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Body matches string": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Peter Self link",
			"id": "0747eea4-22cd-48c7-8603-8abaf1ee4536",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Body has self": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Peter Self link Accepts not application/json",
			"id": "f0fc259b-c86d-4a79-9981-6bef06a5ab15",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status code is 406": {
					"pass": 1,
					"fail": 0
				},
				"Body matches Not Acceptable": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Peter Self link application/xml",
			"id": "ef36783b-cdfc-47d9-8c71-d4b98a2c8574",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Body has self": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Login-access token Bart",
			"id": "10aafc1a-b377-4120-9ce9-85319cfa497c",
			"url": "https://cs493-final.appspot.com/login",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Body matches string": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Bart Self link",
			"id": "004838cd-111c-41b5-a08d-68dbc4884448",
			"url": "http://cs493-final.appspot.com/renters/5638350320959488",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Body has self": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Peter Self link Bart login-UnAuthorized",
			"id": "594388a9-a998-4685-923e-53ff83303d93",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				},
				"Body matches string Unauthorized": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "GET all Renters  pagination link",
			"id": "0693706f-3b07-43d9-980d-0a679871229e",
			"url": "https://cs493-final.appspot.com/renters",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Has First Name": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Has Pagination": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "GET all Renters  pagination next link",
			"id": "7f41b6c7-8d0a-44f8-9f85-7e1b776ee8e0",
			"url": "http://cs493-final.appspot.com/renters?cursor=CioSJGoNc35jczQ5My1maW5hbHITCxIGUmVudGVyGICAgKCFrpYKDBgAIAA=",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Has expected renter on page": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "PUT Peter Renter-authorized",
			"id": "c467fc46-88ad-45e1-b19a-2097d22521ee",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 303,
				"name": "See Other",
				"detail": {
					"name": "See Other",
					"detail": "The response to the request can be found under another URI using a GET method. When received in response to a POST (or PUT/DELETE), it should be assumed that the server has received the data and the redirect should be issued with a separate GET message."
				}
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 303": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Peter Renter-Check modified values",
			"id": "9f5e4b9a-aaa0-49fa-93fe-1b04a14dd08a",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Body matches Last": {
					"pass": 1,
					"fail": 0
				},
				"Body matches First": {
					"pass": 1,
					"fail": 0
				},
				"Body matches phone": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "PUT Peter Renter-unauthorized",
			"id": "f56ee21b-33e7-4c03-8f9e-200b54f3b458",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				},
				"Body matches Unauthorized": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Peter Renter-Check modified values haven't changed",
			"id": "341aacaa-84a5-4f73-955c-761cef0ca57a",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Body matches Last": {
					"pass": 1,
					"fail": 0
				},
				"Body matches First": {
					"pass": 1,
					"fail": 0
				},
				"Body matches phone": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "delete Peter Griffin Renter UnAuthorized",
			"id": "74dd8d68-d02b-4bfb-b8df-e816bcf1703a",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				},
				"Body has unauthorized": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "delete Peter Griffin Renter Authorized",
			"id": "5c849342-34bd-43d8-9db8-ec57903db354",
			"url": "http://cs493-final.appspot.com/renters/5667529791897600",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"testPassFailCounts": {
				"Status code is 204": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "GET Renters check number decrease",
			"id": "d165b584-19a0-4e71-b381-f73ef986a77c",
			"url": "https://cs493-final.appspot.com/renters",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Does not have Peter": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Total Decreased by 1": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "delete Bart Simpson Renter UnAuthorized",
			"id": "9ef792c7-a36f-435f-8662-40b657a50794",
			"url": "http://cs493-final.appspot.com/renters/5638350320959488",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				},
				"Body matches Unauthorized": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "delete Bart Simpson Renter Authorized",
			"id": "5894a2f7-d418-4025-9d4d-acdc8caa49ab",
			"url": "http://cs493-final.appspot.com/renters/5638350320959488",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"testPassFailCounts": {
				"Status code is 204": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "GET Renters check number decrease",
			"id": "bad40055-bac1-4ef8-bfde-498c169cf852",
			"url": "https://cs493-final.appspot.com/renters",
			"time": "2018-12-04T01:24:41.821Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Doesn't Have Bart": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Total Decreased by 1": {
					"pass": 1,
					"fail": 0
				}
			}
		}
	],
	"synced": false
}